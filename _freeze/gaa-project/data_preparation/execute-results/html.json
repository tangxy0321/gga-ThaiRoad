{
  "hash": "9b083903a3be9f70230f1258283f1564",
  "result": {
    "markdown": "---\ntitle: \"Data Preparation\"\nformat: \n  html:\n    code-fold: true\n    code-summary: \"Show code\"\nexecute: \n  eval: true\n  echo: true\n  freeze: auto\n  warning: false\ndate: \"2024-03-14\"\nauthor:\n  - Tan Jun Sheng Jackson\n---\n\n\n# 1. Loading required R packages\n\nThe R packages that we will be using to prepare our data are as follows:\n\n-   **lubridate:** To handle the date formatting\n\n-   **sf:** Import, manage and process vector-based geospatial data in R.\n\n-   **tidyverse:** a collection of packages for data science tasks\n\n-   **gridExtra:** For displaying plots in the same column/row.\n\n-   **tmap:** Provides functions for plotting cartographic quality static point patterns maps or interactive maps by using leaflet API.\n\n-   **maptools:** Provides a set of tools for manipulating geographic data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(lubridate, sf, tidyverse, gridExtra, tmap, maptools)\n```\n:::\n\n\n# 2. Importing the datasets\n\nThe datasets that we will be using are as follow:\n\n::: panel-tabset\n## Thailand Road Accidents Dataset\n\nWe will first drop the rows that have NA in lon and lat, as they will be useless for our analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents <- read.csv(\"data/thai_road_accident_2019_2022.csv\") %>% \n  drop_na(latitude) %>% \n  drop_na(longitude)\n```\n:::\n\n\nWe will then convert the dataframe to SF dataframe, with the EPSG code 4239 for Thailand.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents_sf <- st_as_sf(accidents, \n                       coords = c(\"longitude\", \"latitude\"),\n                       crs=4326) %>%\n  st_transform(crs = 4239)\n```\n:::\n\n\n## Boundary of Thailand\n\nWe use ADM0_EN dataset as it is the boundary of the whole of Thailand.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthai_boundary <- st_read(dsn = \"data/thai_adm_boundary\", \n                 layer = \"tha_admbnda_adm0_rtsd_20220121\") %>%\n                st_transform(crs = 4239) %>%\n                dplyr::select(\"ADM0_EN\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `tha_admbnda_adm0_rtsd_20220121' from data source \n  `/Users/jacksontan/Documents/gga-ThaiRoad/gaa-project/data/thai_adm_boundary' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1 feature and 13 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n:::\n:::\n\n\n## OSM Thailand Roads Dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthai_roads <- st_read(dsn = \"data/thai_road_osm\", \n              layer = \"gis_osm_roads_free_1\") %>%\n              st_transform(crs = 4239) %>%\n              dplyr::select(-ref,-name)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `gis_osm_roads_free_1' from data source \n  `/Users/jacksontan/Documents/gga-ThaiRoad/gaa-project/data/thai_road_osm' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2790699 features and 10 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 97.31382 ymin: 5.643645 xmax: 105.6452 ymax: 20.47168\nGeodetic CRS:  WGS 84\n```\n:::\n:::\n\n:::\n\n# **3. Datasets Overview**\n\nGeneral overview of the dataset\n\n::: panel-tabset\n## Thailand Road Accidents\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(accidents_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 81,376\nColumns: 17\n$ acc_code                    <int> 571905, 3790870, 599075, 571924, 599523, 5…\n$ incident_datetime           <chr> \"2019-01-01 00:00:00\", \"2019-01-01 00:03:0…\n$ report_datetime             <chr> \"2019-01-02 06:11:00\", \"2020-02-20 13:48:0…\n$ province_th                 <chr> \"ลพบุรี\", \"อุบลราชธานี\", \"ประจวบคีรีขันธ์\", \"เชียงใ…\n$ province_en                 <chr> \"Loburi\", \"Ubon Ratchathani\", \"Prachuap Kh…\n$ agency                      <chr> \"department of rural roads\", \"department o…\n$ route                       <chr> \"แยกทางหลวงหมายเลข 21 (กม.ที่ 31+000) - บ้านวั…\n$ vehicle_type                <chr> \"motorcycle\", \"private/passenger car\", \"mo…\n$ presumed_cause              <chr> \"driving under the influence of alcohol\", …\n$ accident_type               <chr> \"other\", \"rollover/fallen on straight road…\n$ number_of_vehicles_involved <int> 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, …\n$ number_of_fatalities        <int> 0, 0, 1, 0, 0, 0, 0, 1, 3, 0, 0, 1, 0, 0, …\n$ number_of_injuries          <int> 2, 2, 0, 1, 0, 2, 2, 0, 0, 1, 1, 0, 1, 1, …\n$ weather_condition           <chr> \"clear\", \"clear\", \"clear\", \"clear\", \"clear…\n$ road_description            <chr> \"straight road\", \"straight road\", \"wide cu…\n$ slope_description           <chr> \"no slope\", \"no slope\", \"slope area\", \"no …\n$ geometry                    <POINT [°]> POINT (100.8769 14.95746), POINT (10…\n```\n:::\n:::\n\n\n## Boundary of Thailand\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(thai_boundary)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1\nColumns: 2\n$ ADM0_EN  <chr> \"Thailand\"\n$ geometry <MULTIPOLYGON [°]> MULTIPOLYGON (((100.0936 6....\n```\n:::\n\n```{.r .cell-code}\nplot(st_geometry(thai_boundary))\n```\n\n::: {.cell-output-display}\n![](data_preparation_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n## OSM Thailand Roads\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(thai_roads)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 2,790,699\nColumns: 9\n$ osm_id   <chr> \"4270622\", \"4828442\", \"4828443\", \"4828444\", \"4828446\", \"85607…\n$ code     <int> 5122, 5122, 5122, 5122, 5122, 5122, 5122, 5122, 5122, 5153, 5…\n$ fclass   <chr> \"residential\", \"residential\", \"residential\", \"residential\", \"…\n$ oneway   <chr> \"B\", \"B\", \"B\", \"B\", \"B\", \"B\", \"F\", \"B\", \"F\", \"B\", \"F\", \"F\", \"…\n$ maxspeed <int> 0, 0, 0, 0, 0, 30, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ layer    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 1, 0, 0…\n$ bridge   <chr> \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"T\", \"…\n$ tunnel   <chr> \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"…\n$ geometry <LINESTRING [°]> LINESTRING (98.97599 18.795..., LINESTRING (98.345…\n```\n:::\n:::\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\ntm_shape(accidents_sf) +\n  tm_dots(\"province_en\")\n```\n\n::: {.cell-output-display}\n![](data_preparation_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nWe can see from the map plot that there are points outside of Thailand, something we would like to exclude. We can do so by using *`st_intersection()`* function on accidents_sf using the thai_boundary.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents_thai_sf <- st_intersection(accidents_sf, thai_boundary)\n```\n:::\n\n\n# 4. Simplifying Variables\n\nSome of the factor variables in the datasets have too many options, and most of them can be simplified into a few general categories. By doing this, it will ease our analysis process and also make the resulting output more comprehensible.\n\n## 4.1 Accident Cause Categories\n\nThe first one is the **presumed_cause** variable of the **accidents_sf** dataset, which we can split into 5 different categories, mainly Driver Factors, Traffic Violations, External Factors, Speeding (as it is the top leading cause of accidents), and Others. Looking at the existing categories:\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccident_categories <- unique(accidents_sf$presumed_cause)\naccident_categories\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"driving under the influence of alcohol\"         \n [2] \"speeding\"                                       \n [3] \"cutting in closely by people/vehicles/animals\"  \n [4] \"failure to yield right of way\"                  \n [5] \"failure to yield/signal\"                        \n [6] \"falling asleep\"                                 \n [7] \"running red lights/traffic signals\"             \n [8] \"other\"                                          \n [9] \"unfamiliarity with the route/unskilled driving\" \n[10] \"vehicle equipment failure\"                      \n[11] \"illegal overtaking\"                             \n[12] \"tailgating\"                                     \n[13] \"ignoring stop sign while leaving intersection\"  \n[14] \"overloaded vehicle\"                             \n[15] \"insufficient light\"                             \n[16] \"disabled vehicle without proper signals\"        \n[17] \"abrupt lane change\"                             \n[18] \"debris/obstruction on the road\"                 \n[19] \"reversing vehicle\"                              \n[20] \"brake/anti-lock brake system failure\"           \n[21] \"medical condition\"                              \n[22] \"vehicle electrical system failure\"              \n[23] \"driving in the wrong lane\"                      \n[24] \"straddling lanes\"                               \n[25] \"dangerous curve\"                                \n[26] \"failure to signal enter/exit parking\"           \n[27] \"slippery road\"                                  \n[28] \"no traffic signs\"                               \n[29] \"sudden stop\"                                    \n[30] \"using mobile phone while driving\"               \n[31] \"driving without headlights/illumination\"        \n[32] \"worn-out/tire blowout\"                          \n[33] \"obstruction in sight\"                           \n[34] \"traffic light system failure\"                   \n[35] \"disabled vehicle without proper signals/signs\"  \n[36] \"narrow road\"                                    \n[37] \"turn signal system failure\"                     \n[38] \"navigation equipment failure\"                   \n[39] \"inadequate visibility\"                          \n[40] \"road in poor condition\"                         \n[41] \"ป้ายจราจรชำรุด\"                                   \n[42] \"เส้นแบ่งทิศทางจราจรชำรุด\"                           \n[43] \"repair/construction on the road\"                \n[44] \"no presumed cause related to driver\"            \n[45] \"external disturbance\"                           \n[46] \"no presumed cause related to vehicle conditions\"\n[47] \"no presumed cause related to road conditions\"   \n[48] \"no road divider lines\"                          \n[49] \"loss of control\"                                \n[50] \"using psychoactive substances\"                  \n[51] \"no traffic light system\"                        \n[52] \"aggressive driving/overtaking\"                  \n[53] \"internal disturbance\"                           \n[54] \"มึนเมาจากแอลกอฮอล์\"                               \n```\n:::\n:::\n\n\nPutting them into 5 general categories:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndriver_factors <- accident_categories[c(1,3,6,9, 14, 21, 30, 44, 49, 50, 52:54)]\ntraffic_violations <- accident_categories[c(3:5, 7, 11:13, 16, 17, 19, 23:26, 29, 31, 35)]\nexternal_factors <- accident_categories[c(10, 15, 18, 20, 22, 27, 28, 32, 33, 34, 36:38, 39, 40:43, 45:48, 51)]\nspeeding <- accident_categories[c(2)]\n```\n:::\n\n\nUpdating the accident categories:\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents_thai_sf$\"accident_categories\" <- as.factor(\n  ifelse(accidents_thai_sf$presumed_cause %in% driver_factors, 'driver_factors', \n  ifelse(accidents_thai_sf$presumed_cause %in% traffic_violations, 'traffic_violations', \n  ifelse(accidents_thai_sf$presumed_cause %in% external_factors, 'external_factors',\n  ifelse(accidents_thai_sf$presumed_cause %in% speeding, 'speeding',\n  'others')))))\n```\n:::\n\n\n## 4.2 Vehicle Categories\n\nNext up we will split the vehicle_type into 4 categories, two_wheeled, four_wheeled, heavy_duty, and others.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvehicle_categories <- unique(accidents_thai_sf$vehicle_type)\nvehicle_categories\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"motorcycle\"                   \"private/passenger car\"       \n [3] \"4-wheel pickup truck\"         \"other\"                       \n [5] \"motorized tricycle\"           \"large truck with trailer\"    \n [7] \"van\"                          \"6-wheel truck\"               \n [9] \"7-10-wheel truck\"             \"bicycle\"                     \n[11] \"passenger pickup truck\"       \"pedestrian\"                  \n[13] \"large passenger vehicle\"      \"tractor/agricultural vehicle\"\n[15] \"three-wheeled vehicle\"       \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntwo_wheeled <- vehicle_categories[c(1,5,10,15)]\nfour_wheeled <- vehicle_categories[c(2,7,13)]\nheavy_duty <- vehicle_categories[c(3,6,8,9,11,14)]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents_thai_sf$\"vehicle_categories\" <- as.factor(\n  ifelse(accidents_thai_sf$vehicle_type %in% two_wheeled, 'two_wheeled', \n  ifelse(accidents_thai_sf$vehicle_type %in% four_wheeled, 'four_wheeled', \n  ifelse(accidents_thai_sf$vehicle_type %in% heavy_duty, 'heavy_duty', \n  'others'))))\n```\n:::\n\n\n## 4.3 Weather Condition and Fatality\n\nWe can also simplify the weather_condition and number_of_fatalities column to whether there is a weather condition, and if the accident is fatal.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents_thai_sf <- accidents_thai_sf %>%\n  mutate(weather_condition = ifelse((weather_condition == \"clear\"), \"no\", \"yes\"),\n         fatal_accident = ifelse((number_of_fatalities >= 1), \"yes\", \"no\"))\n```\n:::\n\n\n## 4.4 Datetime\n\nThe exact datetime doesn't really provide us with much details. Let us split convert the incident_datetime into datetime object, then split it into year, day of the week, and hour of accident.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents_thai_sf$incident_datetime <- as_datetime(\n  accidents_thai_sf$incident_datetime)\n\naccidents_thai_sf <- accidents_thai_sf %>%\n    mutate(year = year(incident_datetime),\n           weekday = wday(incident_datetime,\n                        label=TRUE,\n                        abbr=TRUE),\n         accident_hr = factor(hour(incident_datetime), levels = 0:23))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents_thai_sf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 81367 features and 23 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 97.8506 ymin: 5.768979 xmax: 105.5212 ymax: 20.43735\nGeodetic CRS:  Indian 1954\nFirst 10 features:\n   acc_code   incident_datetime     report_datetime province_th\n1    571905 2019-01-01 00:00:00 2019-01-02 06:11:00        ลพบุรี\n2   3790870 2019-01-01 00:03:00 2020-02-20 13:48:00   อุบลราชธานี\n3    599075 2019-01-01 00:05:00 2019-01-01 10:35:00 ประจวบคีรีขันธ์\n4    571924 2019-01-01 00:20:00 2019-01-02 05:12:00     เชียงใหม่\n5    599523 2019-01-01 00:25:00 2019-01-04 09:42:00    นครสวรรค์\n6    571982 2019-01-01 00:30:00 2019-01-07 12:46:00    แม่ฮ่องสอน\n7    612782 2019-01-01 00:30:00 2019-10-25 14:25:00        ชุมพร\n8    599235 2019-01-01 00:35:00 2019-01-02 16:23:00       สิงห์บุรี\n9    600643 2019-01-01 00:40:00 2019-01-11 10:01:00       สงขลา\n10   599105 2019-01-01 00:45:00 2019-01-01 10:11:00        ตราด\n           province_en                    agency\n1               Loburi department of rural roads\n2     Ubon Ratchathani    department of highways\n3  Prachuap Khiri Khan    department of highways\n4           Chiang Mai department of rural roads\n5         Nakhon Sawan    department of highways\n6         Mae Hong Son department of rural roads\n7             Chumphon    department of highways\n8            Sing Buri    department of highways\n9             Songkhla    department of highways\n10                Trat    department of highways\n                                              route          vehicle_type\n1    แยกทางหลวงหมายเลข 21 (กม.ที่ 31+000) - บ้านวังเพลิง            motorcycle\n2                                เดชอุดม - อุบลราชธานี private/passenger car\n3                                ปราณบุรี - ปากน้ำปราณ            motorcycle\n4  เชื่อมทางหลวงหมายเลข 1013 (กม.ที่ 8+200) - บ้านขุนกลาง            motorcycle\n5                                   เกยไชย - ศรีมงคล private/passenger car\n6   แยกทางหลวงหมายเลข 108 (กม.ที่ 199+400) - บ้านแม่สุริน            motorcycle\n7                                  ท่าทอง - สวนสมบูรณ์  4-wheel pickup truck\n8              ทางแยกวัดสว่างอารมณ์ - ทางแยกศาลหลักเมือง            motorcycle\n9                                 ปากจ่า - ค่ายรวมมิตร            motorcycle\n10                                    บ่อไร่ - แหลมค้อ            motorcycle\n                                  presumed_cause\n1         driving under the influence of alcohol\n2                                       speeding\n3                                       speeding\n4         driving under the influence of alcohol\n5  cutting in closely by people/vehicles/animals\n6                                       speeding\n7                  failure to yield right of way\n8                                       speeding\n9                                       speeding\n10                                      speeding\n                                  accident_type number_of_vehicles_involved\n1                                         other                           1\n2              rollover/fallen on straight road                           1\n3            head-on collision (not overtaking)                           2\n4                                         other                           1\n5              rollover/fallen on straight road                           1\n6                                         other                           1\n7              collision at intersection corner                           2\n8  collision with obstruction (on road surface)                           2\n9                            rear-end collision                           2\n10                           rear-end collision                           2\n   number_of_fatalities number_of_injuries weather_condition road_description\n1                     0                  2                no    straight road\n2                     0                  2                no    straight road\n3                     1                  0                no       wide curve\n4                     0                  1                no    straight road\n5                     0                  0                no    straight road\n6                     0                  2               yes       wide curve\n7                     0                  2                no            other\n8                     1                  0                no    straight road\n9                     3                  0                no       wide curve\n10                    0                  1                no    straight road\n   slope_description  ADM0_EN                  geometry accident_categories\n1           no slope Thailand POINT (100.8769 14.95746)      driver_factors\n2           no slope Thailand POINT (104.8666 15.20905)            speeding\n3         slope area Thailand POINT (99.91122 12.37242)            speeding\n4           no slope Thailand POINT (98.80743 18.60041)      driver_factors\n5           no slope Thailand POINT (100.5934 15.86482)      driver_factors\n6           no slope Thailand POINT (97.92406 18.81464)            speeding\n7              other Thailand POINT (99.06662 9.947344)  traffic_violations\n8           no slope Thailand POINT (100.3999 14.89239)            speeding\n9           no slope Thailand POINT (100.1772 7.057752)            speeding\n10          no slope Thailand POINT (102.5558 12.32108)            speeding\n   vehicle_categories fatal_accident year weekday accident_hr\n1         two_wheeled             no 2019     Tue           0\n2        four_wheeled             no 2019     Tue           0\n3         two_wheeled            yes 2019     Tue           0\n4         two_wheeled             no 2019     Tue           0\n5        four_wheeled             no 2019     Tue           0\n6         two_wheeled             no 2019     Tue           0\n7          heavy_duty             no 2019     Tue           0\n8         two_wheeled            yes 2019     Tue           0\n9         two_wheeled            yes 2019     Tue           0\n10        two_wheeled             no 2019     Tue           0\n```\n:::\n:::\n\n\n# 5. Data Cleaning\n\n## 5.1 Variables Selection\n\nWith our necessary variables clean, let us drop the variables that we will not be using.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents_thai_sf_clean <- accidents_thai_sf %>%\n  dplyr::select(c(5,14:16,19:24,18))\n```\n:::\n\n\n## 5.2 Invalid Geometries\n\n::: panel-tabset\n## Thailand Road Accidents\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest <- st_is_valid(accidents_thai_sf_clean,reason=TRUE)\n\n# Number of invalid geometries\nlength(which(test!= \"Valid Geometry\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n\n```{.r .cell-code}\n# Reason\ntest[which(test!= \"Valid Geometry\")]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ncharacter(0)\n```\n:::\n:::\n\n\n## Boundary of Thailand\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest <- st_is_valid(thai_boundary,reason=TRUE)\n\n# Number of invalid geometries\nlength(which(test!= \"Valid Geometry\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n\n```{.r .cell-code}\n# Reason\ntest[which(test!= \"Valid Geometry\")]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ncharacter(0)\n```\n:::\n:::\n\n\n## OSM Thailand Roads\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest <- st_is_valid(thai_roads ,reason=TRUE)\n\n# Number of invalid geometries\nlength(which(test!= \"Valid Geometry\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n\n```{.r .cell-code}\n# Reason\ntest[which(test!= \"Valid Geometry\")]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ncharacter(0)\n```\n:::\n:::\n\n:::\n\nNo invalid geometries for any of the above dataset.\n\n## 5.3 Missing Values\n\n::: panel-tabset\n## Thailand Road Accidents\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents_thai_sf_clean[rowSums(is.na(accidents_thai_sf_clean))!=0,]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 0 features and 10 fields\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nGeodetic CRS:  Indian 1954\n [1] province_en         weather_condition   road_description   \n [4] slope_description   accident_categories vehicle_categories \n [7] fatal_accident      year                weekday            \n[10] accident_hr         geometry           \n<0 rows> (or 0-length row.names)\n```\n:::\n:::\n\n\n## Boundary of Thailand\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthai_boundary[rowSums(is.na(thai_boundary))!=0,]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 0 features and 1 field\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nGeodetic CRS:  Indian 1954\n[1] ADM0_EN  geometry\n<0 rows> (or 0-length row.names)\n```\n:::\n:::\n\n\n## OSM Thailand Roads\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthai_roads[rowSums(is.na(thai_roads))!=0,]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 0 features and 8 fields\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nGeodetic CRS:  Indian 1954\n[1] osm_id   code     fclass   oneway   maxspeed layer    bridge   tunnel  \n[9] geometry\n<0 rows> (or 0-length row.names)\n```\n:::\n:::\n\n:::\n\nNo missing data as well.\n\n# 6. Writing to RDS\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(accidents_thai_sf_clean,\n          \"data/rds/accidents_thai.rds\")\n\nwrite_rds(thai_boundary,\n          \"data/rds/thai_boundary.rds\")\n\nwrite_rds(thai_roads,\n          \"data/rds/thai_roads.rds\")\n```\n:::\n",
    "supporting": [
      "data_preparation_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}