{
  "hash": "1d3047cbed94df177285c4f385162845",
  "result": {
    "markdown": "---\ntitle: \"Initial Exploration of Dataset\"\nformat: \n  html:\n    code-fold: true\n    code-summary: \"Show code\"\nexecute: \n  eval: true\n  echo: true\n  freeze: auto\n  warning: false\ndate: \"2024-03-13\"\n---\n\n\n# 2. Getting Started\n\n## 2.1 Loading R packages\n\nThe R packages that we will be using in this exercise are as follows:\n\n-   **lubridate:** To handle the date formatting\n\n-   **sf:** Import, manage and process vector-based geospatial data in R.\n\n-   **tidyverse:** a collection of packages for data science tasks\n\n-   **gridExtra:** For displaying plots in the same column/row.\n\n-   **tmap:** Provides functions for plotting cartographic quality static point patterns maps or interactive maps by using leaflet API.\n\n-   **maptools:** Provides a set of tools for manipulating geographic data. In this take-home exercise, we mainly use it to convert Spatial objects into ppp format of spatstat.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, tidyverse, gridExtra, tmap, maptools)\n```\n:::\n\n\n## 2.2 Importing the datasets\n\nThe datasets that we will be using are as follow:\n\n::: panel-tabset\n## Thailand Road Accidents Dataset\n\nWe will first drop the rows that have NA in lon and lat, as they will be useless for our analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents <- read.csv(\"data/thai_road_accident_2019_2022.csv\") %>% \n  drop_na(latitude) %>% \n  drop_na(longitude)\n```\n:::\n\n\nWe will then convert the dataframe to SF dataframe, with the EPSG code 4239 for Thailand.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents_sf <- st_as_sf(accidents, \n                       coords = c(\"longitude\", \"latitude\"),\n                       crs=4326) %>%\n  st_transform(crs = 4239)\n```\n:::\n\n\n## Boundary of Thailand\n\nWe use ADM0_EN dataset as it is the boundary of the whole of Thailand.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthai_boundary <- st_read(dsn = \"data/thai_adm_boundary\", \n                 layer = \"tha_admbnda_adm0_rtsd_20220121\") %>%\n  st_transform(crs = 4239) %>%\n  dplyr::select(\"ADM0_EN\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `tha_admbnda_adm0_rtsd_20220121' from data source \n  `/Users/jacksontan/Documents/gga-ThaiRoad/gaa-project/data/thai_adm_boundary' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1 feature and 13 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n:::\n\n```{.r .cell-code}\nplot(st_geometry(thai_boundary))\n```\n\n::: {.cell-output-display}\n![](Thai_Accidents_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n## OSM Thailand Roads Dataset\n\n\n::: {.cell}\n\n:::\n\n\n## Festive Period Accidents Dataset\n\n\n::: {.cell}\n\n:::\n\n:::\n\n# **3. Geospatial Data Wrangling**\n\n## 3.1 Data Pre-processing - Thailand Road Accidents Dataset\n\nNow let us first take a look at the points on the map.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\ntm_shape(accidents_sf) +\n  tm_dots(\"province_en\")\n```\n\n::: {.cell-output-display}\n![](Thai_Accidents_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nWe can see from the map plot that there are points outside of Thailand, something we would like to exclude. We can do so by using *`st_intersection()`* function on accidents_sf using the thai_boundary.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents_thai_sf <- st_intersection(accidents_sf, thai_boundary)\n```\n:::\n\n\n### 3.1.1 Simplifying Variables\n\nBefore we begin, we should have a look at the dataframe first.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(accidents_thai_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 81,367\nColumns: 18\n$ acc_code                    <int> 571905, 3790870, 599075, 571924, 599523, 5…\n$ incident_datetime           <chr> \"2019-01-01 00:00:00\", \"2019-01-01 00:03:0…\n$ report_datetime             <chr> \"2019-01-02 06:11:00\", \"2020-02-20 13:48:0…\n$ province_th                 <chr> \"ลพบุรี\", \"อุบลราชธานี\", \"ประจวบคีรีขันธ์\", \"เชียงใ…\n$ province_en                 <chr> \"Loburi\", \"Ubon Ratchathani\", \"Prachuap Kh…\n$ agency                      <chr> \"department of rural roads\", \"department o…\n$ route                       <chr> \"แยกทางหลวงหมายเลข 21 (กม.ที่ 31+000) - บ้านวั…\n$ vehicle_type                <chr> \"motorcycle\", \"private/passenger car\", \"mo…\n$ presumed_cause              <chr> \"driving under the influence of alcohol\", …\n$ accident_type               <chr> \"other\", \"rollover/fallen on straight road…\n$ number_of_vehicles_involved <int> 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, …\n$ number_of_fatalities        <int> 0, 0, 1, 0, 0, 0, 0, 1, 3, 0, 0, 1, 0, 0, …\n$ number_of_injuries          <int> 2, 2, 0, 1, 0, 2, 2, 0, 0, 1, 1, 0, 1, 1, …\n$ weather_condition           <chr> \"clear\", \"clear\", \"clear\", \"clear\", \"clear…\n$ road_description            <chr> \"straight road\", \"straight road\", \"wide cu…\n$ slope_description           <chr> \"no slope\", \"no slope\", \"slope area\", \"no …\n$ ADM0_EN                     <chr> \"Thailand\", \"Thailand\", \"Thailand\", \"Thail…\n$ geometry                    <POINT [°]> POINT (100.8769 14.95746), POINT (10…\n```\n:::\n:::\n\n\nThere are a few variables we can simplify, and a few variables we can extract from existing ones. Here are the following variables we can create or modify:\n\n#### Accident Cause Categories\n\nSplitting the presumed_cause variable into 5 different categories, mainly Driver Factors, Traffic Violations, External Factors, Speeding (as it is the top leading cause of accidents), and Others.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccident_categories <- unique(accidents_sf$presumed_cause)\naccident_categories\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"driving under the influence of alcohol\"         \n [2] \"speeding\"                                       \n [3] \"cutting in closely by people/vehicles/animals\"  \n [4] \"failure to yield right of way\"                  \n [5] \"failure to yield/signal\"                        \n [6] \"falling asleep\"                                 \n [7] \"running red lights/traffic signals\"             \n [8] \"other\"                                          \n [9] \"unfamiliarity with the route/unskilled driving\" \n[10] \"vehicle equipment failure\"                      \n[11] \"illegal overtaking\"                             \n[12] \"tailgating\"                                     \n[13] \"ignoring stop sign while leaving intersection\"  \n[14] \"overloaded vehicle\"                             \n[15] \"insufficient light\"                             \n[16] \"disabled vehicle without proper signals\"        \n[17] \"abrupt lane change\"                             \n[18] \"debris/obstruction on the road\"                 \n[19] \"reversing vehicle\"                              \n[20] \"brake/anti-lock brake system failure\"           \n[21] \"medical condition\"                              \n[22] \"vehicle electrical system failure\"              \n[23] \"driving in the wrong lane\"                      \n[24] \"straddling lanes\"                               \n[25] \"dangerous curve\"                                \n[26] \"failure to signal enter/exit parking\"           \n[27] \"slippery road\"                                  \n[28] \"no traffic signs\"                               \n[29] \"sudden stop\"                                    \n[30] \"using mobile phone while driving\"               \n[31] \"driving without headlights/illumination\"        \n[32] \"worn-out/tire blowout\"                          \n[33] \"obstruction in sight\"                           \n[34] \"traffic light system failure\"                   \n[35] \"disabled vehicle without proper signals/signs\"  \n[36] \"narrow road\"                                    \n[37] \"turn signal system failure\"                     \n[38] \"navigation equipment failure\"                   \n[39] \"inadequate visibility\"                          \n[40] \"road in poor condition\"                         \n[41] \"ป้ายจราจรชำรุด\"                                   \n[42] \"เส้นแบ่งทิศทางจราจรชำรุด\"                           \n[43] \"repair/construction on the road\"                \n[44] \"no presumed cause related to driver\"            \n[45] \"external disturbance\"                           \n[46] \"no presumed cause related to vehicle conditions\"\n[47] \"no presumed cause related to road conditions\"   \n[48] \"no road divider lines\"                          \n[49] \"loss of control\"                                \n[50] \"using psychoactive substances\"                  \n[51] \"no traffic light system\"                        \n[52] \"aggressive driving/overtaking\"                  \n[53] \"internal disturbance\"                           \n[54] \"มึนเมาจากแอลกอฮอล์\"                               \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndriver_factors <- accident_categories[c(1,3,6,9, 14, 21, 30, 44, 49, 50, 52:54)]\ntraffic_violations <- accident_categories[c(3:5, 7, 11:13, 16, 17, 19, 23:26, 29, 31, 35)]\nexternal_factors <- accident_categories[c(10, 15, 18, 20, 22, 27, 28, 32, 33, 34, 36:38, 39, 40:43, 45:48, 51)]\nspeeding <- accident_categories[c(2)]\n\naccidents_thai_sf$\"accident_categories\" <- as.factor(\n  ifelse(accidents_thai_sf$presumed_cause %in% driver_factors, 'driver_factors', \n  ifelse(accidents_thai_sf$presumed_cause %in% traffic_violations, 'traffic_violations', \n  ifelse(accidents_thai_sf$presumed_cause %in% external_factors, 'external_factors',\n  ifelse(accidents_thai_sf$presumed_cause %in% speeding, 'speeding',\n  'others')))))\n```\n:::\n\n\nNotes for Accident Categories:\n\n16 and 35 same 41 Broken traffic sign \\<- ป้ายจราจรชำรุด 42 Broken traffic directions divider \\<- เส้นแบ่งทิศทางจราจรชำ\n\n#### Vehicle Categories\n\nNext up we will split the vehicle_type into 4 categories, two_wheeled, four_wheeled, heavy_duty, and others.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvehicle_categories <- unique(accidents_thai_sf$vehicle_type)\nvehicle_categories\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"motorcycle\"                   \"private/passenger car\"       \n [3] \"4-wheel pickup truck\"         \"other\"                       \n [5] \"motorized tricycle\"           \"large truck with trailer\"    \n [7] \"van\"                          \"6-wheel truck\"               \n [9] \"7-10-wheel truck\"             \"bicycle\"                     \n[11] \"passenger pickup truck\"       \"pedestrian\"                  \n[13] \"large passenger vehicle\"      \"tractor/agricultural vehicle\"\n[15] \"three-wheeled vehicle\"       \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntwo_wheeled <- vehicle_categories[c(1,5,10,15)]\nfour_wheeled <- vehicle_categories[c(2,7,13)]\nheavy_duty <- vehicle_categories[c(3,6,8,9,11,14)]\n\naccidents_thai_sf$\"vehicle_categories\" <- as.factor(\n  ifelse(accidents_thai_sf$vehicle_type %in% two_wheeled, 'two_wheeled', \n  ifelse(accidents_thai_sf$vehicle_type %in% four_wheeled, 'four_wheeled', \n  ifelse(accidents_thai_sf$vehicle_type %in% heavy_duty, 'heavy_duty', \n  'others'))))\n```\n:::\n\n\n#### Weather Condition and Fatality\n\nWe can also simplify the weather_condition and number_of_fatalities column to whether there is a weather condition, and if the accident is fatal.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents_thai_sf <- accidents_thai_sf %>%\n  mutate(weather_condition = ifelse((weather_condition == \"clear\"), \"no\", \"yes\"),\n         fatal_accident = ifelse((number_of_fatalities >= 1), \"yes\", \"no\"))\n```\n:::\n\n\n#### Datetime\n\nThe exact datetime doesn't really provide us with much details. Let us split convert the incident_datetime into datetime object, then split it into day of the week and hour of accident.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents_thai_sf$incident_datetime <- as_datetime(\n  accidents_thai_sf$incident_datetime)\n\naccidents_thai_sf <- accidents_thai_sf %>%\n    mutate(weekday = wday(incident_datetime,\n                        label=TRUE,\n                        abbr=TRUE),\n         accident_hr = factor(hour(incident_datetime), levels = 0:23))\n```\n:::\n\n\n### 3.1.2 Variables Selection\n\nWith our necessary variables clean, let us drop the variables that we will not be using.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents_thai_sf_clean <- accidents_thai_sf %>%\n  dplyr::select(c(5,14:16,19:22,18))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(accidents_thai_sf_clean)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 81,367\nColumns: 9\n$ province_en         <chr> \"Loburi\", \"Ubon Ratchathani\", \"Prachuap Khiri Khan…\n$ weather_condition   <chr> \"no\", \"no\", \"no\", \"no\", \"no\", \"yes\", \"no\", \"no\", \"…\n$ road_description    <chr> \"straight road\", \"straight road\", \"wide curve\", \"s…\n$ slope_description   <chr> \"no slope\", \"no slope\", \"slope area\", \"no slope\", …\n$ accident_categories <fct> driver_factors, speeding, speeding, driver_factors…\n$ vehicle_categories  <fct> two_wheeled, four_wheeled, two_wheeled, two_wheele…\n$ fatal_accident      <chr> \"no\", \"no\", \"yes\", \"no\", \"no\", \"no\", \"no\", \"yes\", …\n$ weekday             <ord> Tue, Tue, Tue, Tue, Tue, Tue, Tue, Tue, Tue, Tue, …\n$ geometry            <POINT [°]> POINT (100.8769 14.95746), POINT (104.8666 1…\n```\n:::\n:::\n\n\n### 3.1.3 Invalid Geometries\n\n### 3.1.4 Missing Values\n\n### 3.1.5 Duplicated Points\n\n## 3.2 Data Pre-processing - OSM Thailand Roads Dataset\n\n# **4.** Exploratory Data Analysis\n\n## 4.1 Basic Distribution\n\n### 4.1.1 Accident Categories\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(accidents_thai_sf_clean, aes(x=accident_categories)) + \n  geom_bar() +\n  labs(title = \"Accidents by Cause Categories\",\n       x = \"Accident Cause Categories\",\n       y = \"Number of Accidents\")\n```\n\n::: {.cell-output-display}\n![](Thai_Accidents_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n### 4.1.2 Vehicle Categories\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(accidents_thai_sf_clean, aes(x=vehicle_categories)) + \n  geom_bar() +\n  labs(title = \"Accidents by Vehicle Categories\",\n       x = \"Vehicle Categories\",\n       y = \"Number of Accidents\")\n```\n\n::: {.cell-output-display}\n![](Thai_Accidents_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n### 4.1.3 Day of the Week\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(accidents_thai_sf_clean, aes(x=weekday)) + \n  geom_bar() +\n  labs(title = \"Accidents by Day of the Week\",\n       x = \"Day of the Week\",\n       y = \"Number of Accidents\")\n```\n\n::: {.cell-output-display}\n![](Thai_Accidents_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n### 4.1.4 Accident Hour\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(accidents_thai_sf, aes(x=accident_hr)) +\n  geom_bar() +\n  labs(title = \"Accidents by Start Hour\",\n       x = \"Start Hour\",\n       y = \"Number of Accidents\")\n```\n\n::: {.cell-output-display}\n![](Thai_Accidents_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n### 4.1.5 Fatal Accident?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(accidents_thai_sf_clean, aes(x = fatal_accident)) +\n  geom_bar() +\n  labs(title = \"Fatal Accident?\",\n       x = \"Number of Fatalities\",\n       y = \"Number of Accidents\")\n```\n\n::: {.cell-output-display}\n![](Thai_Accidents_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n### \n\n### 4.1.6 Bad Weather Condition?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(accidents_thai_sf_clean, aes(x = weather_condition)) +\n  geom_bar() +\n  labs(title = \"Weather Condition\",\n       x = \"Weather Condition\",\n       y = \"Number of Accidents\")\n```\n\n::: {.cell-output-display}\n![](Thai_Accidents_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n## 4.2 What causes fatal accident?\n\n### 4.2.1 Logistic Regression to find statistically significant variables\n\nTo find out which variable heavily influence whether an accident is fatal, we can make use of a Logistic Regression to check which one is statistically significant. We first need to create a temporary dataframe and drop the geometry, as the Logistic Regression model can't take in geometry values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents_thai_df <- st_drop_geometry(accidents_thai_sf_clean) %>%\n  mutate(across(where(is.character), as.factor))\n\nsapply(lapply(accidents_thai_df, unique), length)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        province_en   weather_condition    road_description   slope_description \n                 78                   2                  19                   3 \naccident_categories  vehicle_categories      fatal_accident             weekday \n                  5                   4                   2                   7 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Logistic Regression\nglm.def1 <- glm(fatal_accident~.-province_en, data=accidents_thai_df, family=binomial)\nsummary(glm.def1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = fatal_accident ~ . - province_en, family = binomial, \n    data = accidents_thai_df)\n\nCoefficients:\n                                                       Estimate Std. Error\n(Intercept)                                          -13.605537 135.897115\nweather_conditionyes                                  -0.112968   0.035435\nroad_descriptionconnecting to private area            11.590471 135.897042\nroad_descriptionconnecting to public/commercial area  11.177053 135.897022\nroad_descriptionconnecting to school area             10.880889 135.897239\nroad_descriptionfour-way intersection                 11.363376 135.897063\nroad_descriptiongrade-separated intersection/ramps    10.054161 135.897701\nroad_descriptionlane-changing area                    10.544303 135.901700\nroad_descriptionmerge lane                             1.879734 167.455811\nroad_descriptionmotorcycle lane                       -0.754759 352.031905\nroad_descriptionother                                 10.873442 135.897003\nroad_descriptionpedestrian path                        0.865076 352.031907\nroad_descriptionroundabout                            11.340871 135.898927\nroad_descriptionsharp curve                           11.268776 135.897169\nroad_descriptionstraight road                         11.196324 135.897111\nroad_descriptiont-intersection                        11.318749 135.897047\nroad_descriptionu-turn area                           10.223422 135.901539\nroad_descriptionwide curve                            11.291435 135.897114\nroad_descriptiony-intersection                        11.017425 135.897154\nroad_descriptionzebra crossing/pedestrian crossing     0.876408 352.031907\nslope_descriptionother                                 0.196164   0.175868\nslope_descriptionslope area                           -0.056828   0.058558\naccident_categoriesexternal_factors                   -0.409741   0.072614\naccident_categoriesothers                             -1.089566   0.196320\naccident_categoriesspeeding                           -0.049104   0.028807\naccident_categoriestraffic_violations                  0.438414   0.056211\nvehicle_categoriesheavy_duty                           0.021045   0.031267\nvehicle_categoriesothers                               0.187401   0.068885\nvehicle_categoriestwo_wheeled                          1.640338   0.030746\nweekday.L                                             -0.052820   0.029101\nweekday.Q                                              0.051242   0.029309\nweekday.C                                             -0.001802   0.029271\nweekday^4                                              0.035534   0.029488\nweekday^5                                              0.001722   0.029431\nweekday^6                                              0.025204   0.029708\n                                                     z value Pr(>|z|)    \n(Intercept)                                           -0.100  0.92025    \nweather_conditionyes                                  -3.188  0.00143 ** \nroad_descriptionconnecting to private area             0.085  0.93203    \nroad_descriptionconnecting to public/commercial area   0.082  0.93445    \nroad_descriptionconnecting to school area              0.080  0.93618    \nroad_descriptionfour-way intersection                  0.084  0.93336    \nroad_descriptiongrade-separated intersection/ramps     0.074  0.94102    \nroad_descriptionlane-changing area                     0.078  0.93816    \nroad_descriptionmerge lane                             0.011  0.99104    \nroad_descriptionmotorcycle lane                       -0.002  0.99829    \nroad_descriptionother                                  0.080  0.93623    \nroad_descriptionpedestrian path                        0.002  0.99804    \nroad_descriptionroundabout                             0.083  0.93349    \nroad_descriptionsharp curve                            0.083  0.93391    \nroad_descriptionstraight road                          0.082  0.93434    \nroad_descriptiont-intersection                         0.083  0.93362    \nroad_descriptionu-turn area                            0.075  0.94003    \nroad_descriptionwide curve                             0.083  0.93378    \nroad_descriptiony-intersection                         0.081  0.93538    \nroad_descriptionzebra crossing/pedestrian crossing     0.002  0.99801    \nslope_descriptionother                                 1.115  0.26468    \nslope_descriptionslope area                           -0.970  0.33181    \naccident_categoriesexternal_factors                   -5.643 1.67e-08 ***\naccident_categoriesothers                             -5.550 2.86e-08 ***\naccident_categoriesspeeding                           -1.705  0.08827 .  \naccident_categoriestraffic_violations                  7.799 6.22e-15 ***\nvehicle_categoriesheavy_duty                           0.673  0.50090    \nvehicle_categoriesothers                               2.720  0.00652 ** \nvehicle_categoriestwo_wheeled                         53.351  < 2e-16 ***\nweekday.L                                             -1.815  0.06952 .  \nweekday.Q                                              1.748  0.08041 .  \nweekday.C                                             -0.062  0.95092    \nweekday^4                                              1.205  0.22819    \nweekday^5                                              0.059  0.95333    \nweekday^6                                              0.848  0.39623    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 61146  on 81366  degrees of freedom\nResidual deviance: 55564  on 81332  degrees of freedom\nAIC: 55634\n\nNumber of Fisher Scoring iterations: 11\n```\n:::\n:::\n\n\nFrom the model above, we can see that the more statistically significant variables are accident_categories, vehicle_categories, and weather_condition. Let's try that again with just these 3 variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Logistic Regression with these 3 variables\nglm.def2 <- glm(fatal_accident~accident_categories + vehicle_categories + weather_condition, data=accidents_thai_df, family=binomial)\nsummary(glm.def2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = fatal_accident ~ accident_categories + vehicle_categories + \n    weather_condition, family = binomial, data = accidents_thai_df)\n\nCoefficients:\n                                      Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                           -2.38686    0.03406 -70.069  < 2e-16 ***\naccident_categoriesexternal_factors   -0.42141    0.07226  -5.831 5.49e-09 ***\naccident_categoriesothers             -1.02153    0.15389  -6.638 3.18e-11 ***\naccident_categoriesspeeding           -0.06471    0.02815  -2.299  0.02153 *  \naccident_categoriestraffic_violations  0.41688    0.05543   7.520 5.47e-14 ***\nvehicle_categoriesheavy_duty           0.01756    0.03117   0.563  0.57312    \nvehicle_categoriesothers               0.18165    0.06852   2.651  0.00802 ** \nvehicle_categoriestwo_wheeled          1.64715    0.03062  53.795  < 2e-16 ***\nweather_conditionyes                  -0.10081    0.03513  -2.870  0.00411 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 61146  on 81366  degrees of freedom\nResidual deviance: 55650  on 81358  degrees of freedom\nAIC: 55668\n\nNumber of Fisher Scoring iterations: 5\n```\n:::\n:::\n\n\nMost of them are statistically significant at the 0.05 level of significance and above.\n\n### 4.2.2 Fatality breakdown of accidents by variables\n\n#### 4.2.2.1 Weather\n\n\n::: {.cell}\n\n```{.r .cell-code}\nabs_plot <- ggplot(accidents_thai_sf_clean, aes(x = weather_condition, fill = fatal_accident)) + \n    geom_bar() +\n    labs(title = \"Number of Fatal Accidents caused by Weather Condition\",\n       x = \"Bad Weather Condition?\",\n       y = \"Number of Accidents\") +\n    theme_bw()\n\nprop_plot <- accidents_thai_sf_clean %>%\n  count(weather_condition, fatal_accident) %>%       \n  group_by(weather_condition) %>%\n  mutate(pct= prop.table(n) * 100) %>%\n  ggplot() + aes(weather_condition, pct, fill=fatal_accident) +\n  geom_bar(stat=\"identity\") +\n  geom_text(aes(label=paste0(sprintf(\"%1.1f\", pct),\"%\")),\n            position=position_stack(vjust=0.5)) +\n  labs(title = \"Proportion of Fatal Accidents caused by Weather Condition\",\n       x = \"Bad Weather Condition?\",\n       y = \"Proportion of Accidents\") +\n  theme_bw()\n\ngrid.arrange(abs_plot, prop_plot, nrow=2)\n```\n\n::: {.cell-output-display}\n![](Thai_Accidents_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\nFrom this, we can infer that weather conditions in fact is not a direct cause to fatal accident, as proportion of fatal accidents when the weather condition is clear is higher than that of when it is not.\n\n#### 4.2.2.2 Vehicle Categories\n\nWhat about vehicle categories?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nabs_plot2 <- ggplot(accidents_thai_sf_clean, aes(x = vehicle_categories, fill = fatal_accident)) + \n    geom_bar() +\n    labs(title = \"Number of Fatal Accidents by Vehicle Categories\",\n       x = \"Vehicle Categories\",\n       y = \"Number of Accidents\") +\n    theme_bw()\n\nprop_plot2 <- accidents_thai_sf_clean %>%\n  count(vehicle_categories, fatal_accident) %>%       \n  group_by(vehicle_categories) %>%\n  mutate(pct= prop.table(n) * 100) %>%\n  ggplot() + aes(vehicle_categories, pct, fill=fatal_accident) +\n  geom_bar(stat=\"identity\") +\n  geom_text(aes(label=paste0(sprintf(\"%1.1f\", pct),\"%\")),\n            position=position_stack(vjust=0.5)) +\n  labs(title = \"Proportion of Fatal Accidents by Vehicle Categories\",\n       x = \"Vehicle Cateogries\",\n       y = \"Proportion of Accidents\") +\n  theme_bw()\n\ngrid.arrange(abs_plot2, prop_plot2, nrow=2)\n```\n\n::: {.cell-output-display}\n![](Thai_Accidents_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\nMost accidents are caused by heavy_duty vehicles, but the almost 1/3 of all accidents involving two-wheeled vehicles ends up in fatality!\n\n#### 4.2.2.3 Accident Cause Categories\n\nDoes the cause of accident influence the outcome of it?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nabs_plot3 <- ggplot(accidents_thai_sf_clean, aes(x = accident_categories, fill = fatal_accident)) + \n    geom_bar() +\n    labs(title = \"Number of Fatal Accidents by Accident Categories\",\n       x = \"Accident Categories\",\n       y = \"Number of Accidents\") +\n    theme_bw()\n\nprop_plot3 <- accidents_thai_sf_clean %>%\n  count(accident_categories, fatal_accident) %>%       \n  group_by(accident_categories) %>%\n  mutate(pct= prop.table(n) * 100) %>%\n  ggplot() + aes(accident_categories, pct, fill=fatal_accident) +\n  geom_bar(stat=\"identity\") +\n  geom_text(aes(label=paste0(sprintf(\"%1.1f\", pct),\"%\")),\n            position=position_stack(vjust=0.5)) +\n  labs(title = \"Proportion of Fatal Accidents by Accident Categories\",\n       x = \"Accident Cateogries\",\n       y = \"Proportion of Accidents\") +\n  theme_bw()\n\ngrid.arrange(abs_plot3, prop_plot3, nrow=2)\n```\n\n::: {.cell-output-display}\n![](Thai_Accidents_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\nUnsurprisingly, Traffic Violations and Driver Factors have a higher proportion of fatality, though speeding, the leading cause of accidents, have the highest absolute number of fatal accidents.\n\nMore in-depth analysis with a combination of the above?\n\n## 4.3 Distribution of accidents across Thailand\n\n### 4.3.1 Top 10 Province in highest number of accidents recorded\n\nHaving looked at the cause and effect, let us take a closer look at how it differs when we zoom in to specific provinces. We will first look at the top 10 province that has the highest number of accidents.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents_top10 <- accidents_thai_sf_clean %>%\n  group_by(province_en) %>%\n  summarise(total_count=n()) %>%\n  top_n(10, total_count) %>%\n  .$province_en\n\naccidents_top10\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Bangkok\"           \"Chiang Mai\"        \"Chon Buri\"        \n [4] \"Nakhon Ratchasima\" \"Pathum Thani\"      \"Phetchabun\"       \n [7] \"Samut Prakan\"      \"Suphan Buri\"       \"Surat Thani\"      \n[10] \"Tak\"              \n```\n:::\n\n```{.r .cell-code}\nggplot(accidents_thai_sf_clean[accidents_thai_sf_clean$province_en %in% accidents_top10,], \n       aes(x=province_en)) + geom_bar() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  labs(title = \"Top 10 Provinces with most recorded accidents\",\n       x = \"Provinces\",\n       y = \"Number of Accidents\")\n```\n\n::: {.cell-output-display}\n![](Thai_Accidents_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\nBeing the leading province with the highest population density, it make sense that Bangkok has the highest number of accidents.\n\n### 4.3.2 Bangkok Comparison\n\nLet's filter our data to only show records in Bangkok\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents_bkk_sf_clean <- accidents_thai_sf_clean[accidents_thai_sf_clean$province_en == \"Bangkok\",]\n```\n:::\n\n\n#### 4.3.2.1 Leading cause of accident\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(accidents_bkk_sf_clean, \n       aes(x=accident_categories)) + geom_bar() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  labs(title = \"Cause for accidents in Bangkok\",\n       x = \"Causes\",\n       y = \"Number of Accidents\")\n```\n\n::: {.cell-output-display}\n![](Thai_Accidents_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n\nSpeeding is the leading cause of accidents in Bangkok too.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccidents_bkk_sf_clean\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 6089 features and 8 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 100.3368 ymin: 13.60823 xmax: 100.9319 ymax: 13.94986\nGeodetic CRS:  Indian 1954\nFirst 10 features:\n    province_en weather_condition road_description slope_description\n48      Bangkok                no            other             other\n82      Bangkok                no    straight road             other\n121     Bangkok                no    straight road          no slope\n241     Bangkok                no    straight road          no slope\n276     Bangkok                no    straight road          no slope\n301     Bangkok                no    straight road          no slope\n306     Bangkok                no    straight road          no slope\n312     Bangkok                no    straight road          no slope\n335     Bangkok                no    straight road             other\n352     Bangkok                no    straight road          no slope\n    accident_categories vehicle_categories fatal_accident weekday\n48               others             others             no     Tue\n82               others             others             no     Tue\n121      driver_factors       four_wheeled             no     Tue\n241            speeding       four_wheeled             no     Tue\n276            speeding         heavy_duty             no     Tue\n301            speeding       four_wheeled             no     Tue\n306            speeding       four_wheeled             no     Tue\n312            speeding         heavy_duty             no     Tue\n335              others             others             no     Wed\n352      driver_factors       four_wheeled             no     Wed\n                     geometry\n48  POINT (100.6141 13.78879)\n82  POINT (100.6141 13.78879)\n121 POINT (100.3947 13.62229)\n241 POINT (100.3482 13.78657)\n276 POINT (100.3777 13.78491)\n301 POINT (100.7061 13.74549)\n306 POINT (100.4094 13.66938)\n312 POINT (100.6817 13.86652)\n335 POINT (100.5838 13.70921)\n352 POINT (100.3776 13.78487)\n```\n:::\n:::\n\n\n#### 4.3.2.2 Accident fatality rate\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(accidents_bkk_sf_clean, aes(x = fatal_accident)) +\n  geom_bar() +\n  labs(title = \"Fatal Accident?\",\n       x = \"Number of Fatalities\",\n       y = \"Number of Accidents\")\n```\n\n::: {.cell-output-display}\n![](Thai_Accidents_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n\nFatality rate of accidents in Bangkok is overwhelmingly low for some reason. Worth taking a look into?\n\n### 4.3.3 Which province has highest fatality rate?\n\nTBC\n\n## 4.4 Is there a relationship between festive periods and accident rate?\n\n# **-. Extras**\n\nThere are points with unknown province well within the boundary of Thailand.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunknown <- accidents_thai_sf_clean %>% filter(province_en == \"unknown\")\nunknown\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 17 features and 8 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 99.05025 ymin: 6.579508 xmax: 103.651 ymax: 18.35884\nGeodetic CRS:  Indian 1954\nFirst 10 features:\n   province_en weather_condition road_description slope_description\n1      unknown                no    straight road          no slope\n2      unknown                no            other             other\n3      unknown                no            other             other\n4      unknown                no    straight road          no slope\n5      unknown                no            other             other\n6      unknown               yes    straight road          no slope\n7      unknown                no    straight road          no slope\n8      unknown                no    straight road        slope area\n9      unknown                no    straight road          no slope\n10     unknown                no    straight road          no slope\n   accident_categories vehicle_categories fatal_accident weekday\n1             speeding         heavy_duty             no     Mon\n2             speeding         heavy_duty            yes     Sat\n3             speeding         heavy_duty            yes     Sun\n4       driver_factors         heavy_duty             no     Fri\n5     external_factors         heavy_duty             no     Sun\n6             speeding         heavy_duty             no     Sat\n7       driver_factors        two_wheeled            yes     Fri\n8             speeding         heavy_duty             no     Thu\n9             speeding             others             no     Mon\n10            speeding       four_wheeled             no     Wed\n                    geometry\n1  POINT (100.9371 12.99688)\n2  POINT (100.5634 15.32747)\n3   POINT (103.651 18.35884)\n4  POINT (99.05025 8.257525)\n5  POINT (100.7342 14.58477)\n6  POINT (100.6205 14.05743)\n7   POINT (99.82965 13.3123)\n8  POINT (99.07149 9.972287)\n9  POINT (100.9956 13.25096)\n10 POINT (101.5332 13.78469)\n```\n:::\n:::\n\n\nBy extracting them out we can see that there are 17 points\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\ntm_shape(unknown) +\n  tm_dots(\"province_en\")\n```\n\n::: {.cell-output-display}\n![](Thai_Accidents_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n\n\nLoading the provinces\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthai_provinces <- st_read(dsn = \"data/thai_adm_boundary\", \n                 layer = \"tha_admbnda_adm1_rtsd_20220121\") %>%\n  st_transform(crs = 4239) %>%\n  dplyr::select(\"ADM1_EN\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `/Users/jacksontan/Documents/gga-ThaiRoad/gaa-project/data/thai_adm_boundary' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n:::\n\n```{.r .cell-code}\nglimpse(thai_provinces)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 77\nColumns: 2\n$ ADM1_EN  <chr> \"Bangkok\", \"Samut Prakan\", \"Nonthaburi\", \"Pathum Thani\", \"Phr…\n$ geometry <MULTIPOLYGON [°]> MULTIPOLYGON (((100.6173 13..., MULTIPOLYGON (((…\n```\n:::\n:::\n\n\nMerging the provinces to the unknown points, we can actually assign their correct province to them, though not sure if the provinces here are standardized to the one provided in the thailand accidents dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(st_intersection(unknown, thai_provinces))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 17\nColumns: 10\n$ province_en         <chr> \"unknown\", \"unknown\", \"unknown\", \"unknown\", \"unkno…\n$ weather_condition   <chr> \"no\", \"yes\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"…\n$ road_description    <chr> \"straight road\", \"straight road\", \"straight road\",…\n$ slope_description   <chr> \"no slope\", \"no slope\", \"no slope\", \"other\", \"no s…\n$ accident_categories <fct> speeding, speeding, speeding, speeding, speeding, …\n$ vehicle_categories  <fct> heavy_duty, heavy_duty, heavy_duty, four_wheeled, …\n$ fatal_accident      <chr> \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"n…\n$ weekday             <ord> Wed, Sat, Thu, Thu, Mon, Sun, Mon, Mon, Wed, Sun, …\n$ ADM1_EN             <chr> \"Bangkok\", \"Pathum Thani\", \"Pathum Thani\", \"Phra N…\n$ geometry            <POINT [°]> POINT (100.4502 13.66487), POINT (100.6205 1…\n```\n:::\n:::\n",
    "supporting": [
      "Thai_Accidents_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}